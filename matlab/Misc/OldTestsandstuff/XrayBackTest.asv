dom = circleDomain(radius=1.5);
met = euclidMetric();
 
func = @(x,y) (  double((x-0.3).^2+(y-0.5).^2 <= 0.25)  );


beta = linspace(0,2*pi,200);
alpha = linspace(-pi,pi,200)*0.5;

ss = 0.01;
surf = RiemannSurface(dom,met, stepType='RK4', stepSize=ss, geoDur=20);
[betaI,alphaI] = meshgrid(beta,alpha);



figure, hold on
[minB,maxB] = dom.getBoundingBox();

[VX,VY] = meshgrid(minB(1):0.05:maxB(1),minB(2):0.05:maxB(2));
figgg = pcolor(VX,VY,func(VX,VY));
figgg.EdgeColor = 'none';

%surf.plot;
surf.plotGeoFan(0);
dom.plotAlNormal;



tic
   xrayData = surf.I0(betaI,alphaI, func);
toc


figure
pl = pcolor(betaI,alphaI,xrayData);
pl.EdgeColor = 'none';

[betaI,alphaI] = ndgrid(beta,alpha);
xray = griddedInterpolant(betaI,alphaI, xrayData);

figure
[betaI,alphaI] = meshgrid(beta,alpha);
pl = pcolor(betaI,alphaI,xray(betaI,alphaI));
pl.EdgeColor = 'none';


tic 
    funcBack = surf.backproject(xray, VX,VY, 20);
toc


figure
pl = pcolor(funcBack);
pl.EdgeColor = 'none';